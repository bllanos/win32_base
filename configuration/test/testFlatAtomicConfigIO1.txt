# Testing a blank line below

		 # Another comment, with whitespace preceding it
# Testing the BOOL data type
  BOOL --	s p a c e  ::	one		= true 
# Testing an empty scope name
BOOL--::two=false

# Testing the WSTRING data type
# Empty string
WSTRING -- strings :: 01 = L""
WSTRING -- strings :: 011 = L" "
WSTRING -- strings :: 02 = L"Invalid string \"
WSTRING -- strings :: 03 = L"Double backslash \\"
WSTRING -- strings :: 04 = L"Invalid string \\\"
WSTRING -- strings :: 05 = L"\b Not a recognized \b escape sequence \b"
WSTRING -- strings :: 06 = L"\\b Not a recognized \\b escape sequence \\b"
WSTRING -- strings :: 07 = L"\\\b Not a recognized \\\b escape sequence \\\b"
WSTRING -- strings :: 08 = L"\ string "
WSTRING -- strings :: 09 = L"\\ Double backslash"
WSTRING -- strings :: 10 = L"\\\ Triple backslash"
WSTRING -- strings :: 11 = L"\n Escape \n sequence \n"
WSTRING -- strings :: 12 = L"\\" Results \\" in entire line not being parsed \\""
WSTRING -- strings :: 121 = L"\" Escape \" sequence \""
WSTRING -- strings :: 13 = L"\\\t Escape \\\t sequence \\\t"
WSTRING -- strings :: 14 = L"\\t No escape \\t sequences \\t"

# Testing some additional invalid data
BOOL -- no::value = felse
WSTRING -- no::value = "none"
WSTRING -- no::value = Lnone"
WSTRING -- no::value = L"none
WSTRING -- no::value = none

# Testing a duplicate key
  BOOL --	space  ::	one		= false

# Testing some improperly formatted data
BOOL - no::value = false
BOL -- no::value = false
BOOL -- no:value = false
BOOL -- no::value ! false
BOOL -- no:: = false

# Testing a line which is too long Testing a line which is too long Testing a line which is too long Testing a line which is too long Testing a line which is too long Testing a line which is too long Testing a line which is too long Testing a line which is too long
# The following data should not be parsed
BOOL--	::afterLongLine=false