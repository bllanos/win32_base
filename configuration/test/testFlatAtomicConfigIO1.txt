# Testing a blank line below

		 # Another comment, with whitespace preceding it
# Testing the BOOL data type
  BOOL --	s p a c e  ::	one		= true 
# Testing an empty scope name
BOOL--::two=false

# Testing the WSTRING data type
# Empty string
WSTRING -- strings :: 01 = L""
WSTRING -- strings :: 011 = L" "
WSTRING -- strings :: 02 = L"Invalid string \"
WSTRING -- strings :: 03 = L"Double backslash \\"
WSTRING -- strings :: 04 = L"Invalid string \\\"
WSTRING -- strings :: 05 = L"\b Not a recognized \b escape sequence \b"
WSTRING -- strings :: 06 = L"\\b Not a recognized \\b escape sequence \\b"
WSTRING -- strings :: 07 = L"\\\b Not a recognized \\\b escape sequence \\\b"
WSTRING -- strings :: 08 = L"\ string "
WSTRING -- strings :: 09 = L"\\ Double backslash"
WSTRING -- strings :: 10 = L"\\\ Triple backslash"
WSTRING -- strings :: 11 = L"\n Escape \n sequence \n"
WSTRING -- strings :: 12 = L"\\" Results \\" in entire line not being parsed \\""
WSTRING -- strings :: 121 = L"\" Escape \" sequence \""
WSTRING -- strings :: 13 = L"\\\t Escape \\\t sequence \\\t"
WSTRING -- strings :: 14 = L"\\t No escape \\t sequences \\t"

# Testing the INT data type
INT -- ints :: 01 = 3.14
INT -- ints :: 02 = 3.0
INT -- ints :: 03 = 33
INT -- ints :: 04 = 45e2
INT -- ints :: 05 = e45e2
INT -- ints :: 06 = 0

# Testing the DOUBLE data type
DOUBLE -- doubles :: 01 = 1.23456789123456789
DOUBLE -- doubles :: 02 = 3.0.1
DOUBLE -- doubles :: 03 = 33e4
DOUBLE -- doubles :: 04 = -2e-2
DOUBLE -- doubles :: 05 = e4.5e2
DOUBLE -- doubles :: 06 = 0

# Testing the FLOAT4 data type
FLOAT4 -- float4s :: 01 = (1, 0.1f, -3e2, 54.0)
FLOAT4 -- float4s :: 02 = ( 2, 0.1, -3e2, 54.0 )
FLOAT4 -- float4s :: 03 = (3, 0.1 -3e2, 54.0)
FLOAT4 -- float4s :: 04 = (4, 0.1, -3e2, 54.0,)
FLOAT4 -- float4s :: 05 = ( 4, 1.23456789123456789, -3e2, 54.0)
FLOAT4 -- float4s :: 06 = ( 4, 1.2348e5, -3e2, 54.0, 0.0)
FLOAT4 -- float4s :: 07 = ( 4, 1.2348e5, 0.0)

# Testing the COLOR data type
COLOR -- colors :: 01 = (255, 255, 255, 255)
COLOR -- colors :: 02 = (0, 0, 0, 0)
COLOR -- colors :: 03 = (-0, 0.0, 0, 0)
COLOR -- colors :: 04 = (255.0, 256, 254, 30.5)
COLOR -- colors :: 05 = (-1, 0.01e-3, 254, 30.5)
COLOR -- colors :: 06 = (2, 0.01e-3, 254, 30.5)

# Testing the FILENAME data type
# Improperly formatted literals
FILENAME -- filenames :: 01 = L".\invalid.txt"
FILENAME -- filenames :: 02 = .\invalid.txt"
FILENAME -- filenames :: 03 = ".\invalid.txt

# Testing some additional invalid data
BOOL -- no::value = felse
WSTRING -- no::value = "none"
WSTRING -- no::value = Lnone"
WSTRING -- no::value = L"none
WSTRING -- no::value = none

# Testing a duplicate key
  BOOL --	space  ::	one		= false

# Testing some improperly formatted data
BOOL - no::value = false
BOL -- no::value = false
BOOL -- no:value = false
BOOL -- no::value ! false
BOOL -- no:: = false

# Testing a line which is too long Testing a line which is too long Testing a line which is too long Testing a line which is too long Testing a line which is too long Testing a line which is too long Testing a line which is too long Testing a line which is too long
# The following data should not be parsed
BOOL--	::afterLongLine=false 